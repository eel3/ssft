#!/bin/sh
# -*- coding: utf-8-unix -*-
# vim:fileencoding=utf-8:ff=unix
# @(#) SSFT (Script/Source File Templates) helper command.

# Copyright (c) 2019 eel3
#
# This software is provided 'as-is', without any express or implied
# warranty. In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
#     1. The origin of this software must not be misrepresented; you must not
#     claim that you wrote the original software. If you use this software
#     in a product, an acknowledgment in the product documentation would be
#     appreciated but is not required.
#
#     2. Altered source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.
#
#     3. This notice may not be removed or altered from any source
#     distribution.

set -u
umask 0022
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
PATH=/bin:/usr/bin
export IFS LC_ALL=C LANG=C PATH

readonly progname=${0##*/}
readonly version=1.0.0

if [ -n "$SSFT_TEMPLATE_PATH" ]; then
    template_path=$SSFT_TEMPLATE_PATH
else
    template_path="$HOME/git/ssft/template"
fi

# usage <exit-code>
usage() {
    echo "usage: $progname [-hlv] <template ...>" 1>&2
    exit $1
}

# version (no parameter)
version() {
    echo "$progname $version" 1>&2
    exit 0
}

# error <message>
error() {
    echo "$progname:" ${@+"$@"} 1>&2
    exit 1
}

# warn <message>
warn() {
    echo "$progname:" ${@+"$@"} 1>&2
}

# copy_templates <template ...>
copy_templates() {
    for i; do
        fn="$template_path/$i"
        if [ ! -f "$fn" ]; then
            warn "template not found: $i"
            continue
        fi
        cp -ip "$fn" $(basename "$i") || warn "failed to copy the template: $i"
    done
}

# list_templates (no parameter)
list_templates() {
    cd "$template_path" 2>/dev/null || error "template directory not found: $template_path"
    find ./ -type f -not -name .gitattributes -print |
    sed 's#^\./##'
    cd - >/dev/null
}

# main routine

cmd=copy

opt=
while getopts 'hlv' opt; do
    case $opt in
    h)      usage 0 ;;
    l)      cmd=list ;;
    v)      version ;;
    \?)     usage 1 ;;
    esac
done
shift $(($OPTIND - 1))

case "$cmd" in
copy)   [ $# -ne 0 ] || usage 1
        copy_templates ${@+"$@"} ;;
list)   list_templates ;;
esac
